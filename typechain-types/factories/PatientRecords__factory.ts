/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  PatientRecords,
  PatientRecordsInterface,
} from "../PatientRecords";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "patient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "doctor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ipfsHash",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "encrypted",
        type: "bool",
      },
    ],
    name: "RecordAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "patient",
        type: "address",
      },
      {
        internalType: "address",
        name: "doctor",
        type: "address",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "ipfsHash",
        type: "string",
      },
      {
        internalType: "bool",
        name: "encrypted",
        type: "bool",
      },
    ],
    name: "addRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "patient",
        type: "address",
      },
    ],
    name: "getRecords",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "doctor",
            type: "address",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "ipfsHash",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "encrypted",
            type: "bool",
          },
        ],
        internalType: "struct PatientRecords.Record[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506107a28061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a0076e841461003b578063f4d9271114610064575b600080fd5b61004e61004936600461037e565b610079565b60405161005b91906103e6565b60405180910390f35b610077610072366004610542565b610245565b005b6001600160a01b038116600090815260208181526040808320805482518185028101850190935280835260609492939192909184015b8282101561023a5760008481526020908190206040805160a081019091526005850290910180546001600160a01b0316825260018101805492939192918401916100f8906105e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610124906105e6565b80156101715780601f1061014657610100808354040283529160200191610171565b820191906000526020600020905b81548152906001019060200180831161015457829003601f168201915b5050505050815260200160028201805461018a906105e6565b80601f01602080910402602001604051908101604052809291908181526020018280546101b6906105e6565b80156102035780601f106101d857610100808354040283529160200191610203565b820191906000526020600020905b8154815290600101906020018083116101e657829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff16151560409091015290825260019290920191016100af565b505050509050919050565b6040805160a0810182526001600160a01b03868116825260208083018781528385018790524260608501528515156080850152898316600090815280835294852080546001808201835591875292909520845160059093020180546001600160a01b031916929093169190911782555191928392908201906102c7908261066f565b50604082015160028201906102dc908261066f565b506060820151816003015560808201518160040160006101000a81548160ff0219169083151502179055505050846001600160a01b0316866001600160a01b03167f1941534a9bb535ac90e34ebca6f4a346d2319e1b0e5ca20b60a8658c604762fa86864287604051610352949392919061072e565b60405180910390a3505050505050565b80356001600160a01b038116811461037957600080fd5b919050565b60006020828403121561039057600080fd5b61039982610362565b9392505050565b6000815180845260005b818110156103c6576020818501810151868301820152016103aa565b506000602082860101526020601f19601f83011685010191505092915050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b8281101561049157868503603f19018452815180516001600160a01b0316865260208082015160a091880182905290610449908801826103a0565b90506040820151878203604089015261046282826103a0565b606084810151908a0152608093840151151593909801929092525050602093840193919091019060010161040e565b50929695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126104c457600080fd5b813567ffffffffffffffff8111156104de576104de61049d565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561050d5761050d61049d565b60405281815283820160200185101561052557600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561055a57600080fd5b61056386610362565b945061057160208701610362565b9350604086013567ffffffffffffffff81111561058d57600080fd5b610599888289016104b3565b935050606086013567ffffffffffffffff8111156105b657600080fd5b6105c2888289016104b3565b925050608086013580151581146105d857600080fd5b809150509295509295909350565b600181811c908216806105fa57607f821691505b60208210810361061a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561066a57806000526020600020601f840160051c810160208510156106475750805b601f840160051c820191505b818110156106675760008155600101610653565b50505b505050565b815167ffffffffffffffff8111156106895761068961049d565b61069d8161069784546105e6565b84610620565b6020601f8211600181146106d157600083156106b95750848201515b600019600385901b1c1916600184901b178455610667565b600084815260208120601f198516915b8281101561070157878501518255602094850194600190920191016106e1565b508482101561071f5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b60808152600061074160808301876103a0565b828103602084015261075381876103a0565b604084019590955250509015156060909101529291505056fea2646970667358221220b7593426f768a7f6fc1dbf6972a6ee9024d59d16ef0ad9b84087ade1795730f564736f6c634300081c0033";

type PatientRecordsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PatientRecordsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PatientRecords__factory extends ContractFactory {
  constructor(...args: PatientRecordsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PatientRecords & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PatientRecords__factory {
    return super.connect(runner) as PatientRecords__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PatientRecordsInterface {
    return new Interface(_abi) as PatientRecordsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PatientRecords {
    return new Contract(address, _abi, runner) as unknown as PatientRecords;
  }
}
