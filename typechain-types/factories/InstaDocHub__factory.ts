/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { InstaDocHub, InstaDocHubInterface } from "../InstaDocHub";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "doctorRegistryAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "consentRegistryAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "escrowAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "patientRecordsAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "doctor",
        type: "address",
      },
    ],
    name: "DoctorApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "doctor",
        type: "address",
      },
    ],
    name: "DoctorRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "patient",
        type: "address",
      },
    ],
    name: "PatientRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "patient",
        type: "address",
      },
    ],
    name: "PatientRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "patient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "doctor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "recordCID",
        type: "string",
      },
    ],
    name: "RecordAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "patient",
        type: "address",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "recordCID",
        type: "string",
      },
      {
        internalType: "bool",
        name: "encrypted",
        type: "bool",
      },
    ],
    name: "addRecordForPatient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allRecords",
    outputs: [
      {
        internalType: "address",
        name: "patient",
        type: "address",
      },
      {
        internalType: "address",
        name: "doctor",
        type: "address",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "recordCID",
        type: "string",
      },
      {
        internalType: "bool",
        name: "encrypted",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "doctorAddr",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "specialization",
        type: "string",
      },
      {
        internalType: "string",
        name: "profileCID",
        type: "string",
      },
    ],
    name: "approveDoctor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "consentRegistry",
    outputs: [
      {
        internalType: "contract ConsentRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "doctorRecordIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "doctorRegistry",
    outputs: [
      {
        internalType: "contract DoctorRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "escrow",
    outputs: [
      {
        internalType: "contract EscrowPayments",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllPatients",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllRecords",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "patient",
            type: "address",
          },
          {
            internalType: "address",
            name: "doctor",
            type: "address",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "recordCID",
            type: "string",
          },
          {
            internalType: "bool",
            name: "encrypted",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct InstaDocHub.HubRecord[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllVerifiedDoctors",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "doctorAddr",
        type: "address",
      },
    ],
    name: "getDoctorDetails",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "specialization",
        type: "string",
      },
      {
        internalType: "string",
        name: "profileCID",
        type: "string",
      },
      {
        internalType: "bool",
        name: "verified",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRecordsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getRecordsRange",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "patient",
            type: "address",
          },
          {
            internalType: "address",
            name: "doctor",
            type: "address",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "recordCID",
            type: "string",
          },
          {
            internalType: "bool",
            name: "encrypted",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct InstaDocHub.HubRecord[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "doctor",
        type: "address",
      },
    ],
    name: "isDoctorVerified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "patientAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "patientRecordIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "patientRecords",
    outputs: [
      {
        internalType: "contract PatientRecords",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registerPatient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registeredPatients",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "patientAddr",
        type: "address",
      },
    ],
    name: "removePatient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "doctorAddr",
        type: "address",
      },
    ],
    name: "revokeDoctor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "transferAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "viewMyRecords",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "doctor",
            type: "address",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "ipfsHash",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "encrypted",
            type: "bool",
          },
        ],
        internalType: "struct PatientRecords.Record[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516125e03803806125e083398101604081905261002f916100a8565b60048054336001600160a01b0319918216179091556000805482166001600160a01b0396871617905560018054821694861694909417909355600280548416928516929092179091556003805490921692169190911790556100fc565b80516001600160a01b03811681146100a357600080fd5b919050565b600080600080608085870312156100be57600080fd5b6100c78561008c565b93506100d56020860161008c565b92506100e36040860161008c565b91506100f16060860161008c565b905092959194509250565b6124d58061010b6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c8063822d3885116100de578063b40f169111610097578063ca52419011610071578063ca5241901461036a578063db89cf5b1461037d578063e2fdcc1714610390578063f851a440146103a357600080fd5b8063b40f16911461032c578063bab90dbd1461033f578063c1c69a1c1461036257600080fd5b8063822d3885146102be57806382cfb2ff146102c657806389f279f3146102d95780638c691a4b146102ec5780639cdaaad814610301578063a7f9fe721461032457600080fd5b8063505158bb11610130578063505158bb146102235780635e2547f21461023557806364e2559e1461024857806375829def146102735780637d0d6257146102865780637e257dc81461029957600080fd5b80630416af271461017857806304d158fe1461018d5780630b13acdf146101b657806318a231a9146101d957806324d7806c146101ee57806342d4daf314610210575b600080fd5b61018b610186366004611890565b6103b6565b005b6101a061019b3660046118b4565b61047f565b6040516101ad9190611926565b60405180910390f35b6101c96101c4366004611890565b6106ff565b60405190151581526020016101ad565b6101e161076e565b6040516101ad91906119ec565b6101c96101fc366004611890565b6004546001600160a01b0391821691161490565b61018b61021e366004611a8e565b610923565b6007545b6040519081526020016101ad565b610227610243366004611b26565b610e15565b60035461025b906001600160a01b031681565b6040516001600160a01b0390911681526020016101ad565b61018b610281366004611890565b610e46565b61018b610294366004611890565b610f22565b6102ac6102a7366004611b52565b610ff6565b6040516101ad96959493929190611b6b565b61018b611160565b60005461025b906001600160a01b031681565b6102276102e7366004611b26565b611237565b6102f4611253565b6040516101ad9190611bbf565b6101c961030f366004611890565b60056020526000908152604090205460ff1681565b6101a061131b565b61025b61033a366004611b52565b611635565b61035261034d366004611890565b61165f565b6040516101ad9493929190611c6a565b6101e16116e8565b61018b610378366004611cb7565b611759565b60015461025b906001600160a01b031681565b60025461025b906001600160a01b031681565b60045461025b906001600160a01b031681565b6004546001600160a01b031633146103e95760405162461bcd60e51b81526004016103e090611d6d565b60405180910390fd5b600054604051630416af2760e01b81526001600160a01b03838116600483015290911690630416af2790602401600060405180830381600087803b15801561043057600080fd5b505af1158015610444573d6000803e3d6000fd5b50506040516001600160a01b03841692507fc7053e532de062d754b8ed96090affe0c4ba36dde0a699de7dd5185a9a9e7d0f9150600090a250565b6060818310801561049257506007548211155b6104ce5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c69642072616e676560981b60448201526064016103e0565b60006104da8484611da7565b6001600160401b038111156104f1576104f1611dba565b60405190808252806020026020018201604052801561052a57816020015b61051761182e565b81526020019060019003908161050f5790505b509050835b838110156106f5576007818154811061054a5761054a611dd0565b60009182526020918290206040805160c081018252600690930290910180546001600160a01b039081168452600182015416938301939093526002830180549293929184019161059990611de6565b80601f01602080910402602001604051908101604052809291908181526020018280546105c590611de6565b80156106125780601f106105e757610100808354040283529160200191610612565b820191906000526020600020905b8154815290600101906020018083116105f557829003601f168201915b5050505050815260200160038201805461062b90611de6565b80601f016020809104026020016040519081016040528092919081815260200182805461065790611de6565b80156106a45780601f10610679576101008083540402835291602001916106a4565b820191906000526020600020905b81548152906001019060200180831161068757829003601f168201915b5050509183525050600482015460ff1615156020820152600590910154604090910152826106d28784611da7565b815181106106e2576106e2611dd0565b602090810291909101015260010161052f565b5090505b92915050565b6000805460405163b9209e3360e01b81526001600160a01b0384811660048301529091169063b9209e3390602401602060405180830381865afa15801561074a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f99190611e20565b6006546060906000906001600160401b0381111561078e5761078e611dba565b6040519080825280602002602001820160405280156107b7578160200160208202803683370190505b5090506000805b60065481101561087d5760056000600683815481106107df576107df611dd0565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff1615610875576006818154811061081f5761081f611dd0565b9060005260206000200160009054906101000a90046001600160a01b031683838151811061084f5761084f611dd0565b6001600160a01b03909216602092830291909101909101528161087181611e3d565b9250505b6001016107be565b506000816001600160401b0381111561089857610898611dba565b6040519080825280602002602001820160405280156108c1578160200160208202803683370190505b50905060005b8281101561091b578381815181106108e1576108e1611dd0565b60200260200101518282815181106108fb576108fb611dd0565b6001600160a01b03909216602092830291909101909101526001016108c7565b509392505050565b60005460405163b9209e3360e01b81523360048201526001600160a01b039091169063b9209e3390602401602060405180830381865afa15801561096b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098f9190611e20565b6109d15760405162461bcd60e51b8152602060048201526013602482015272111bd8dd1bdc881b9bdd081d995c9a599a5959606a1b60448201526064016103e0565b6001600160a01b03861660009081526005602052604090205460ff16610a325760405162461bcd60e51b815260206004820152601660248201527514185d1a595b9d081b9bdd081c9959da5cdd195c995960521b60448201526064016103e0565b6000805b600160009054906101000a90046001600160a01b03166001600160a01b0316632cd5db476040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aad9190611e56565b811015610b7e57600154604051633d0704d560e11b8152600481018390526000916001600160a01b031690637a0e09aa90602401600060405180830381865afa158015610afe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b269190810190611f32565b9050886001600160a01b031681600001516001600160a01b0316148015610b59575060208101516001600160a01b031633145b8015610b66575080608001515b15610b75576001925050610b7e565b50600101610a36565b5080610bc05760405162461bcd60e51b8152602060048201526011602482015270139bc81058dd1a5d994810dbdb9cd95b9d607a1b60448201526064016103e0565b60035460405163f4d9271160e01b81526001600160a01b039091169063f4d9271190610bfc908a9033908b908b908b908b908b90600401612011565b600060405180830381600087803b158015610c1657600080fd5b505af1158015610c2a573d6000803e3d6000fd5b505050506000600780549050905060076040518060c001604052808a6001600160a01b03168152602001336001600160a01b0316815260200189898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f8a018190048102820181019092528881529181019190899089908190840183828082843760009201829052509385525050508615156020808401919091524260409384015284546001818101875595835291819020845160069093020180546001600160a01b039384166001600160a01b031991821617825591850151958101805496909316959091169490941790558101519091906002820190610d4990826120b7565b5060608201516003820190610d5e90826120b7565b50608082015160048201805460ff191691151591909117905560a0909101516005909101556001600160a01b03881660008181526008602090815260408083208054600181810183559185528385200186905533808552600984528285208054928301815585529290932090920184905590519091907f977dc7867dd6fb513af3d4bb11f4457a5052487f13412788530b454c0b7dfa2c90610e039089908990612175565b60405180910390a35050505050505050565b60086020528160005260406000208181548110610e3157600080fd5b90600052602060002001600091509150505481565b6004546001600160a01b03163314610e705760405162461bcd60e51b81526004016103e090611d6d565b6001600160a01b038116610ec65760405162461bcd60e51b815260206004820152601960248201527f4e65772061646d696e206973207a65726f20616464726573730000000000000060448201526064016103e0565b6004546040516001600160a01b038084169216907ff8ccb027dfcd135e000e9d45e6cc2d662578a8825d4c45b5e32e0adf67e79ec690600090a3600480546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b03163314610f4c5760405162461bcd60e51b81526004016103e090611d6d565b6001600160a01b03811660009081526005602052604090205460ff16610fad5760405162461bcd60e51b815260206004820152601660248201527514185d1a595b9d081b9bdd081c9959da5cdd195c995960521b60448201526064016103e0565b6001600160a01b038116600081815260056020526040808220805460ff19169055517f053a4badf166f01c4b02f6bcb71d2d67734470d0866282e291e73001aa25c7699190a250565b6007818154811061100657600080fd5b60009182526020909120600690910201805460018201546002830180546001600160a01b03938416955092909116929161103f90611de6565b80601f016020809104026020016040519081016040528092919081815260200182805461106b90611de6565b80156110b85780601f1061108d576101008083540402835291602001916110b8565b820191906000526020600020905b81548152906001019060200180831161109b57829003601f168201915b5050505050908060030180546110cd90611de6565b80601f01602080910402602001604051908101604052809291908181526020018280546110f990611de6565b80156111465780601f1061111b57610100808354040283529160200191611146565b820191906000526020600020905b81548152906001019060200180831161112957829003601f168201915b505050506004830154600590930154919260ff1691905086565b3360009081526005602052604090205460ff16156111b55760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e48149959da5cdd195c995960721b60448201526064016103e0565b33600081815260056020526040808220805460ff1916600190811790915560068054918201815583527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b03191684179055517fc9fa2003fca4ce0dfc8cb0deae32266b715536df6685365b05b5be96ede8e49c9190a2565b60096020528160005260406000208181548110610e3157600080fd5b3360009081526005602052604090205460609060ff166112a65760405162461bcd60e51b815260206004820152600e60248201526d139bdd08149959da5cdd195c995960921b60448201526064016103e0565b600354604051632801dba160e21b81523360048201526001600160a01b039091169063a0076e8490602401600060405180830381865afa1580156112ee573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261131691908101906121ac565b905090565b6007546060906000906001600160401b0381111561133b5761133b611dba565b60405190808252806020026020018201604052801561137457816020015b61136161182e565b8152602001906001900390816113595790505b5090506000805b60075481101561159457600560006007838154811061139c5761139c611dd0565b600091825260208083206006909202909101546001600160a01b0316835282019290925260400190205460ff161561158c57600781815481106113e1576113e1611dd0565b60009182526020918290206040805160c081018252600690930290910180546001600160a01b039081168452600182015416938301939093526002830180549293929184019161143090611de6565b80601f016020809104026020016040519081016040528092919081815260200182805461145c90611de6565b80156114a95780601f1061147e576101008083540402835291602001916114a9565b820191906000526020600020905b81548152906001019060200180831161148c57829003601f168201915b505050505081526020016003820180546114c290611de6565b80601f01602080910402602001604051908101604052809291908181526020018280546114ee90611de6565b801561153b5780601f106115105761010080835404028352916020019161153b565b820191906000526020600020905b81548152906001019060200180831161151e57829003601f168201915b5050509183525050600482015460ff1615156020820152600590910154604090910152835184908490811061157257611572611dd0565b6020026020010181905250818061158890611e3d565b9250505b60010161137b565b506000816001600160401b038111156115af576115af611dba565b6040519080825280602002602001820160405280156115e857816020015b6115d561182e565b8152602001906001900390816115cd5790505b50905060005b8281101561091b5783818151811061160857611608611dd0565b602002602001015182828151811061162257611622611dd0565b60209081029190910101526001016115ee565b6006818154811061164557600080fd5b6000918252602090912001546001600160a01b0316905081565b6000805460405163bab90dbd60e01b81526001600160a01b038481166004830152606093849384939192169063bab90dbd90602401600060405180830381865afa1580156116b1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116d99190810190612302565b93509350935093509193509193565b6000805460408051633071a68760e21b815290516060936001600160a01b039093169263c1c69a1c92600480820193918290030181865afa158015611731573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261131691908101906123a6565b6004546001600160a01b031633146117835760405162461bcd60e51b81526004016103e090611d6d565b6000546040516393c095ff60e01b81526001600160a01b03909116906393c095ff906117bf908a908a908a908a908a908a908a90600401612444565b600060405180830381600087803b1580156117d957600080fd5b505af11580156117ed573d6000803e3d6000fd5b50506040516001600160a01b038a1692507fcc36c734faf3e8e1867fdfc3adcdcab90ac2d8e24d1a4e6a06f4212045a4e75e9150600090a250505050505050565b6040518060c0016040528060006001600160a01b0316815260200160006001600160a01b031681526020016060815260200160608152602001600015158152602001600081525090565b6001600160a01b038116811461188d57600080fd5b50565b6000602082840312156118a257600080fd5b81356118ad81611878565b9392505050565b600080604083850312156118c757600080fd5b50508035926020909101359150565b60005b838110156118f15781810151838201526020016118d9565b50506000910152565b600081518084526119128160208601602086016118d6565b601f01601f19169290920160200192915050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b828110156119e057868503603f19018452815180516001600160a01b0390811687526020808301519091169087015260408082015160c091880182905290611998908801826118fa565b9050606082015187820360608901526119b182826118fa565b6080848101511515908a015260a09384015193909801929092525050602093840193919091019060010161194e565b50929695505050505050565b602080825282518282018190526000918401906040840190835b81811015611a2d5783516001600160a01b0316835260209384019390920191600101611a06565b509095945050505050565b60008083601f840112611a4a57600080fd5b5081356001600160401b03811115611a6157600080fd5b602083019150836020828501011115611a7957600080fd5b9250929050565b801515811461188d57600080fd5b60008060008060008060808789031215611aa757600080fd5b8635611ab281611878565b955060208701356001600160401b03811115611acd57600080fd5b611ad989828a01611a38565b90965094505060408701356001600160401b03811115611af857600080fd5b611b0489828a01611a38565b9094509250506060870135611b1881611a80565b809150509295509295509295565b60008060408385031215611b3957600080fd5b8235611b4481611878565b946020939093013593505050565b600060208284031215611b6457600080fd5b5035919050565b6001600160a01b0387811682528616602082015260c060408201819052600090611b97908301876118fa565b8281036060840152611ba981876118fa565b9415156080840152505060a00152949350505050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b828110156119e057868503603f19018452815180516001600160a01b0316865260208082015160a091880182905290611c22908801826118fa565b905060408201518782036040890152611c3b82826118fa565b606084810151908a01526080938401511515939098019290925250506020938401939190910190600101611be7565b608081526000611c7d60808301876118fa565b8281036020840152611c8f81876118fa565b90508281036040840152611ca381866118fa565b915050821515606083015295945050505050565b60008060008060008060006080888a031215611cd257600080fd5b8735611cdd81611878565b965060208801356001600160401b03811115611cf857600080fd5b611d048a828b01611a38565b90975095505060408801356001600160401b03811115611d2357600080fd5b611d2f8a828b01611a38565b90955093505060608801356001600160401b03811115611d4e57600080fd5b611d5a8a828b01611a38565b989b979a50959850939692959293505050565b6020808252600a908201526927b7363c9020b236b4b760b11b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b818103818111156106f9576106f9611d91565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600181811c90821680611dfa57607f821691505b602082108103611e1a57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611e3257600080fd5b81516118ad81611a80565b600060018201611e4f57611e4f611d91565b5060010190565b600060208284031215611e6857600080fd5b5051919050565b60405160a081016001600160401b0381118282101715611e9157611e91611dba565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611ebf57611ebf611dba565b604052919050565b600082601f830112611ed857600080fd5b81516001600160401b03811115611ef157611ef1611dba565b611f04601f8201601f1916602001611e97565b818152846020838601011115611f1957600080fd5b611f2a8260208301602087016118d6565b949350505050565b600060208284031215611f4457600080fd5b81516001600160401b03811115611f5a57600080fd5b820160a08185031215611f6c57600080fd5b611f74611e6f565b8151611f7f81611878565b81526020820151611f8f81611878565b602082015260408201516001600160401b03811115611fad57600080fd5b611fb986828501611ec7565b6040830152506060828101519082015260809091015190611fd982611a80565b60808101919091529392505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0388811682528716602082015260a06040820181905260009061203e9083018789611fe8565b8281036060840152612051818688611fe8565b915050821515608083015298975050505050505050565b601f8211156120b257806000526020600020601f840160051c8101602085101561208f5750805b601f840160051c820191505b818110156120af576000815560010161209b565b50505b505050565b81516001600160401b038111156120d0576120d0611dba565b6120e4816120de8454611de6565b84612068565b6020601f82116001811461211857600083156121005750848201515b600019600385901b1c1916600184901b1784556120af565b600084815260208120601f198516915b828110156121485787850151825560209485019460019092019101612128565b50848210156121665786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b602081526000611f2a602083018486611fe8565b60006001600160401b038211156121a2576121a2611dba565b5060051b60200190565b6000602082840312156121be57600080fd5b81516001600160401b038111156121d457600080fd5b8201601f810184136121e557600080fd5b80516121f86121f382612189565b611e97565b8082825260208201915060208360051b85010192508683111561221a57600080fd5b602084015b838110156122f75780516001600160401b0381111561223d57600080fd5b850160a0818a03601f1901121561225357600080fd5b61225b611e6f565b602082015161226981611878565b815260408201516001600160401b0381111561228457600080fd5b6122938b602083860101611ec7565b60208301525060608201516001600160401b038111156122b257600080fd5b6122c18b602083860101611ec7565b6040830152506080820151606082015260a090910151906122e182611a80565b608081019190915283526020928301920161221f565b509695505050505050565b6000806000806080858703121561231857600080fd5b84516001600160401b0381111561232e57600080fd5b61233a87828801611ec7565b94505060208501516001600160401b0381111561235657600080fd5b61236287828801611ec7565b93505060408501516001600160401b0381111561237e57600080fd5b61238a87828801611ec7565b925050606085015161239b81611a80565b939692955090935050565b6000602082840312156123b857600080fd5b81516001600160401b038111156123ce57600080fd5b8201601f810184136123df57600080fd5b80516123ed6121f382612189565b8082825260208201915060208360051b85010192508683111561240f57600080fd5b6020840193505b8284101561243a57835161242981611878565b825260209384019390910190612416565b9695505050505050565b6001600160a01b0388168152608060208201819052600090612469908301888a611fe8565b828103604084015261247c818789611fe8565b90508281036060840152612491818587611fe8565b9a995050505050505050505056fea264697066735822122043ebe7fd4755bd6184f66c0cd53d1329f954a2630a42acace8ca4668f331d81264736f6c634300081c0033";

type InstaDocHubConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InstaDocHubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InstaDocHub__factory extends ContractFactory {
  constructor(...args: InstaDocHubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    doctorRegistryAddr: AddressLike,
    consentRegistryAddr: AddressLike,
    escrowAddr: AddressLike,
    patientRecordsAddr: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      doctorRegistryAddr,
      consentRegistryAddr,
      escrowAddr,
      patientRecordsAddr,
      overrides || {}
    );
  }
  override deploy(
    doctorRegistryAddr: AddressLike,
    consentRegistryAddr: AddressLike,
    escrowAddr: AddressLike,
    patientRecordsAddr: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      doctorRegistryAddr,
      consentRegistryAddr,
      escrowAddr,
      patientRecordsAddr,
      overrides || {}
    ) as Promise<
      InstaDocHub & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): InstaDocHub__factory {
    return super.connect(runner) as InstaDocHub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InstaDocHubInterface {
    return new Interface(_abi) as InstaDocHubInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): InstaDocHub {
    return new Contract(address, _abi, runner) as unknown as InstaDocHub;
  }
}
