/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  ConsentRegistry,
  ConsentRegistryInterface,
} from "../ConsentRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "patient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "doctor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "cid",
        type: "string",
      },
    ],
    name: "ConsentCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ConsentRevoked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "consentExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "consents",
    outputs: [
      {
        internalType: "address",
        name: "patient",
        type: "address",
      },
      {
        internalType: "address",
        name: "doctor",
        type: "address",
      },
      {
        internalType: "string",
        name: "encryptedCID",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "consentsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "doctor",
        type: "address",
      },
      {
        internalType: "string",
        name: "encryptedCID",
        type: "string",
      },
    ],
    name: "createConsent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getConsent",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "patient",
            type: "address",
          },
          {
            internalType: "address",
            name: "doctor",
            type: "address",
          },
          {
            internalType: "string",
            name: "encryptedCID",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
        ],
        internalType: "struct ConsentRegistry.Consent",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "revokeConsent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610a598061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806316a0042c146100675780632cd5db471461007c57806333bfb3091461009357806360242900146100a65780637a0e09aa146100d9578063d557d53a146100f9575b600080fd5b61007a6100753660046106c2565b61011d565b005b6000545b6040519081526020015b60405180910390f35b6100806100a13660046106db565b610288565b6100c96100b43660046106c2565b60016020526000908152604090205460ff1681565b604051901515815260200161008a565b6100ec6100e73660046106c2565b610463565b60405161008a91906107b4565b61010c6101073660046106c2565b6105e6565b60405161008a959493929190610814565b60008181526001602052604090205460ff166101795760405162461bcd60e51b815260206004820152601660248201527510dbdb9cd95b9d08191bd95cc81b9bdd08195e1a5cdd60521b60448201526064015b60405180910390fd5b600080828154811061018d5761018d610859565b6000918252602090912060059091020180549091506001600160a01b031633146101f95760405162461bcd60e51b815260206004820152601760248201527f4f6e6c792070617469656e742063616e207265766f6b650000000000000000006044820152606401610170565b600481015460ff1661024d5760405162461bcd60e51b815260206004820152601760248201527f436f6e73656e7420616c7265616479207265766f6b65640000000000000000006044820152606401610170565b60048101805460ff1916905560405182907f17ba03014e2d53e5983887aaf82c0688082a4e7010d71f88e948319fbb6fbe8c90600090a25050565b6000806040518060a00160405280336001600160a01b03168152602001866001600160a01b0316815260200185858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050426020808501919091526001604094850181905283549081018455928052845160059093027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563810180546001600160a01b039586166001600160a01b0319918216178255928701517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56483018054919096169316929092179093559284015193945084937f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e565909201916103be91508261090e565b50606082015160038201556080909101516004909101805460ff1916911515919091179055600080546103f3906001906109cd565b600081815260016020819052604091829020805460ff19169091179055519091506001600160a01b03871690339083907f78c4e3c51bc1c18ea43cbec652d7fe2842e7636e79ee31e2d57925a9dce4e1ca90610452908a908a906109f4565b60405180910390a495945050505050565b6040805160a08101825260008082526020808301829052606083850181905283018290526080830182905284825260019052919091205460ff166104e25760405162461bcd60e51b815260206004820152601660248201527510dbdb9cd95b9d08191bd95cc81b9bdd08195e1a5cdd60521b6044820152606401610170565b600082815481106104f5576104f5610859565b60009182526020918290206040805160a081018252600590930290910180546001600160a01b039081168452600182015416938301939093526002830180549293929184019161054490610885565b80601f016020809104026020016040519081016040528092919081815260200182805461057090610885565b80156105bd5780601f10610592576101008083540402835291602001916105bd565b820191906000526020600020905b8154815290600101906020018083116105a057829003601f168201915b50505091835250506003820154602082015260049091015460ff16151560409091015292915050565b600081815481106105f657600080fd5b60009182526020909120600590910201805460018201546002830180546001600160a01b03938416955092909116929161062f90610885565b80601f016020809104026020016040519081016040528092919081815260200182805461065b90610885565b80156106a85780601f1061067d576101008083540402835291602001916106a8565b820191906000526020600020905b81548152906001019060200180831161068b57829003601f168201915b50505050600383015460049093015491929160ff16905085565b6000602082840312156106d457600080fd5b5035919050565b6000806000604084860312156106f057600080fd5b83356001600160a01b038116811461070757600080fd5b9250602084013567ffffffffffffffff81111561072357600080fd5b8401601f8101861361073457600080fd5b803567ffffffffffffffff81111561074b57600080fd5b86602082840101111561075d57600080fd5b939660209190910195509293505050565b6000815180845260005b8181101561079457602081850181015186830182015201610778565b506000602082860101526020601f19601f83011685010191505092915050565b602080825282516001600160a01b0390811683830152908301511660408083019190915282015160a060608301526000906107f260c084018261076e565b9050606084015160808401526080840151151560a08401528091505092915050565b6001600160a01b0386811682528516602082015260a0604082018190526000906108409083018661076e565b6060830194909452509015156080909101529392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061089957607f821691505b6020821081036108b957634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561090957806000526020600020601f840160051c810160208510156108e65750805b601f840160051c820191505b8181101561090657600081556001016108f2565b50505b505050565b815167ffffffffffffffff8111156109285761092861086f565b61093c816109368454610885565b846108bf565b6020601f82116001811461097057600083156109585750848201515b600019600385901b1c1916600184901b178455610906565b600084815260208120601f198516915b828110156109a05787850151825560209485019460019092019101610980565b50848210156109be5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b818103818111156109ee57634e487b7160e01b600052601160045260246000fd5b92915050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f1916010191905056fea2646970667358221220a5018b6bf4b8dccf2f1283eb3e6f7d7644c09ffc5b1f2fbe4bdde2ebb7b230b664736f6c634300081c0033";

type ConsentRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConsentRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConsentRegistry__factory extends ContractFactory {
  constructor(...args: ConsentRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ConsentRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ConsentRegistry__factory {
    return super.connect(runner) as ConsentRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConsentRegistryInterface {
    return new Interface(_abi) as ConsentRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ConsentRegistry {
    return new Contract(address, _abi, runner) as unknown as ConsentRegistry;
  }
}
