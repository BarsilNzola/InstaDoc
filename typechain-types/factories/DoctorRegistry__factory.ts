/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  DoctorRegistry,
  DoctorRegistryInterface,
} from "../DoctorRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "doctor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "specialization",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "profileCID",
        type: "string",
      },
    ],
    name: "DoctorRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "doctor",
        type: "address",
      },
    ],
    name: "DoctorRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "doctors",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "specialization",
        type: "string",
      },
      {
        internalType: "string",
        name: "profileCID",
        type: "string",
      },
      {
        internalType: "bool",
        name: "verified",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "doctorAddr",
        type: "address",
      },
    ],
    name: "isVerified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "doctorAddr",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "specialization",
        type: "string",
      },
      {
        internalType: "string",
        name: "profileCID",
        type: "string",
      },
    ],
    name: "registerDoctor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "doctorAddr",
        type: "address",
      },
    ],
    name: "revokeDoctor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "transferAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50600080546001600160a01b031916331790556109d9806100316000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630416af271461006757806375829def1461007c57806393c095ff1461008f578063a9583c22146100a2578063b9209e33146100ce578063f851a4401461010d575b600080fd5b61007a6100753660046105fa565b610138565b005b61007a61008a3660046105fa565b6101b7565b61007a61009d366004610665565b610203565b6100b56100b03660046105fa565b61041b565b6040516100c59493929190610762565b60405180910390f35b6100fd6100dc3660046105fa565b6001600160a01b031660009081526001602052604090206003015460ff1690565b60405190151581526020016100c5565b600054610120906001600160a01b031681565b6040516001600160a01b0390911681526020016100c5565b6000546001600160a01b0316331461016b5760405162461bcd60e51b8152600401610162906107af565b60405180910390fd5b6001600160a01b038116600081815260016020526040808220600301805460ff19169055517fc7053e532de062d754b8ed96090affe0c4ba36dde0a699de7dd5185a9a9e7d0f9190a250565b6000546001600160a01b031633146101e15760405162461bcd60e51b8152600401610162906107af565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461022d5760405162461bcd60e51b8152600401610162906107af565b6001600160a01b03871660009081526001602052604090206003015460ff16156102995760405162461bcd60e51b815260206004820152601960248201527f446f63746f7220616c72656164792072656769737465726564000000000000006044820152606401610162565b604051806080016040528087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f880181900481028201810190925286815291810191908790879081908401838280828437600092019190915250505090825250604080516020601f86018190048102820181019092528481529181019190859085908190840183828082843760009201829052509385525050600160209384018190526001600160a01b038c168352909252604090208251909150819061037f9082610872565b50602082015160018201906103949082610872565b50604082015160028201906103a99082610872565b50606091909101516003909101805460ff19169115159190911790556040516001600160a01b038816907f6ec2d4f29ace1bfeec4e3323ae5cd8987538be3c8fec51a7752861585ff64e039061040a9089908990899089908990899061095a565b60405180910390a250505050505050565b600160205260009081526040902080548190610436906107e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610462906107e9565b80156104af5780601f10610484576101008083540402835291602001916104af565b820191906000526020600020905b81548152906001019060200180831161049257829003601f168201915b5050505050908060010180546104c4906107e9565b80601f01602080910402602001604051908101604052809291908181526020018280546104f0906107e9565b801561053d5780601f106105125761010080835404028352916020019161053d565b820191906000526020600020905b81548152906001019060200180831161052057829003601f168201915b505050505090806002018054610552906107e9565b80601f016020809104026020016040519081016040528092919081815260200182805461057e906107e9565b80156105cb5780601f106105a0576101008083540402835291602001916105cb565b820191906000526020600020905b8154815290600101906020018083116105ae57829003601f168201915b5050506003909301549192505060ff1684565b80356001600160a01b03811681146105f557600080fd5b919050565b60006020828403121561060c57600080fd5b610615826105de565b9392505050565b60008083601f84011261062e57600080fd5b50813567ffffffffffffffff81111561064657600080fd5b60208301915083602082850101111561065e57600080fd5b9250929050565b60008060008060008060006080888a03121561068057600080fd5b610689886105de565b9650602088013567ffffffffffffffff8111156106a557600080fd5b6106b18a828b0161061c565b909750955050604088013567ffffffffffffffff8111156106d157600080fd5b6106dd8a828b0161061c565b909550935050606088013567ffffffffffffffff8111156106fd57600080fd5b6107098a828b0161061c565b989b979a50959850939692959293505050565b6000815180845260005b8181101561074257602081850181015186830182015201610726565b506000602082860101526020601f19601f83011685010191505092915050565b608081526000610775608083018761071c565b8281036020840152610787818761071c565b9050828103604084015261079b818661071c565b915050821515606083015295945050505050565b6020808252600a908201526927b7363c9020b236b4b760b11b604082015260600190565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806107fd57607f821691505b60208210810361081d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561086d57806000526020600020601f840160051c8101602085101561084a5750805b601f840160051c820191505b8181101561086a5760008155600101610856565b50505b505050565b815167ffffffffffffffff81111561088c5761088c6107d3565b6108a08161089a84546107e9565b84610823565b6020601f8211600181146108d457600083156108bc5750848201515b600019600385901b1c1916600184901b17845561086a565b600084815260208120601f198516915b8281101561090457878501518255602094850194600190920191016108e4565b50848210156109225786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60608152600061096e60608301888a610931565b8281036020840152610981818789610931565b90508281036040840152610996818587610931565b999850505050505050505056fea26469706673582212205f0e6898b34d95fc1b9ebc4d55dc14ba72c37b405a84ab4ed9df85dd77cb309964736f6c634300081c0033";

type DoctorRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DoctorRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DoctorRegistry__factory extends ContractFactory {
  constructor(...args: DoctorRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DoctorRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DoctorRegistry__factory {
    return super.connect(runner) as DoctorRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DoctorRegistryInterface {
    return new Interface(_abi) as DoctorRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DoctorRegistry {
    return new Contract(address, _abi, runner) as unknown as DoctorRegistry;
  }
}
