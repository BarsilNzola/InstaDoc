/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  DoctorRegistry,
  DoctorRegistryInterface,
} from "../DoctorRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "doctor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "specialization",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "profileCID",
        type: "string",
      },
    ],
    name: "DoctorRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "doctor",
        type: "address",
      },
    ],
    name: "DoctorRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "doctors",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "specialization",
        type: "string",
      },
      {
        internalType: "string",
        name: "profileCID",
        type: "string",
      },
      {
        internalType: "bool",
        name: "verified",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "doctorAddr",
        type: "address",
      },
    ],
    name: "isVerified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "doctorAddr",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "specialization",
        type: "string",
      },
      {
        internalType: "string",
        name: "profileCID",
        type: "string",
      },
    ],
    name: "registerDoctor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "doctorAddr",
        type: "address",
      },
    ],
    name: "revokeDoctor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50600080546001600160a01b03191633179055610915806100316000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630416af271461005c57806393c095ff14610071578063a9583c2214610084578063b9209e33146100b0578063f851a440146100ef575b600080fd5b61006f61006a36600461055a565b61011a565b005b61006f61007f3660046105c5565b6101b2565b61009761009236600461055a565b61037b565b6040516100a794939291906106c2565b60405180910390f35b6100df6100be36600461055a565b6001600160a01b031660009081526001602052604090206003015460ff1690565b60405190151581526020016100a7565b600054610102906001600160a01b031681565b6040516001600160a01b0390911681526020016100a7565b6000546001600160a01b031633146101665760405162461bcd60e51b815260206004820152600a60248201526927b7363c9020b236b4b760b11b60448201526064015b60405180910390fd5b6001600160a01b038116600081815260016020526040808220600301805460ff19169055517fc7053e532de062d754b8ed96090affe0c4ba36dde0a699de7dd5185a9a9e7d0f9190a250565b6000546001600160a01b031633146101f95760405162461bcd60e51b815260206004820152600a60248201526927b7363c9020b236b4b760b11b604482015260640161015d565b604051806080016040528087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f880181900481028201810190925286815291810191908790879081908401838280828437600092019190915250505090825250604080516020601f86018190048102820181019092528481529181019190859085908190840183828082843760009201829052509385525050600160209384018190526001600160a01b038c16835290925260409020825190915081906102df90826107ae565b50602082015160018201906102f490826107ae565b506040820151600282019061030990826107ae565b50606091909101516003909101805460ff19169115159190911790556040516001600160a01b038816907f6ec2d4f29ace1bfeec4e3323ae5cd8987538be3c8fec51a7752861585ff64e039061036a90899089908990899089908990610896565b60405180910390a250505050505050565b60016020526000908152604090208054819061039690610725565b80601f01602080910402602001604051908101604052809291908181526020018280546103c290610725565b801561040f5780601f106103e45761010080835404028352916020019161040f565b820191906000526020600020905b8154815290600101906020018083116103f257829003601f168201915b50505050509080600101805461042490610725565b80601f016020809104026020016040519081016040528092919081815260200182805461045090610725565b801561049d5780601f106104725761010080835404028352916020019161049d565b820191906000526020600020905b81548152906001019060200180831161048057829003601f168201915b5050505050908060020180546104b290610725565b80601f01602080910402602001604051908101604052809291908181526020018280546104de90610725565b801561052b5780601f106105005761010080835404028352916020019161052b565b820191906000526020600020905b81548152906001019060200180831161050e57829003601f168201915b5050506003909301549192505060ff1684565b80356001600160a01b038116811461055557600080fd5b919050565b60006020828403121561056c57600080fd5b6105758261053e565b9392505050565b60008083601f84011261058e57600080fd5b50813567ffffffffffffffff8111156105a657600080fd5b6020830191508360208285010111156105be57600080fd5b9250929050565b60008060008060008060006080888a0312156105e057600080fd5b6105e98861053e565b9650602088013567ffffffffffffffff81111561060557600080fd5b6106118a828b0161057c565b909750955050604088013567ffffffffffffffff81111561063157600080fd5b61063d8a828b0161057c565b909550935050606088013567ffffffffffffffff81111561065d57600080fd5b6106698a828b0161057c565b989b979a50959850939692959293505050565b6000815180845260005b818110156106a257602081850181015186830182015201610686565b506000602082860101526020601f19601f83011685010191505092915050565b6080815260006106d5608083018761067c565b82810360208401526106e7818761067c565b905082810360408401526106fb818661067c565b915050821515606083015295945050505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061073957607f821691505b60208210810361075957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156107a957806000526020600020601f840160051c810160208510156107865750805b601f840160051c820191505b818110156107a65760008155600101610792565b50505b505050565b815167ffffffffffffffff8111156107c8576107c861070f565b6107dc816107d68454610725565b8461075f565b6020601f82116001811461081057600083156107f85750848201515b600019600385901b1c1916600184901b1784556107a6565b600084815260208120601f198516915b828110156108405787850151825560209485019460019092019101610820565b508482101561085e5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6060815260006108aa60608301888a61086d565b82810360208401526108bd81878961086d565b905082810360408401526108d281858761086d565b999850505050505050505056fea26469706673582212204ef3c6f015526764dfcf00d3d4cfba48b6421d61bdd92a69d7a1c8fac6396de264736f6c634300081c0033";

type DoctorRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DoctorRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DoctorRegistry__factory extends ContractFactory {
  constructor(...args: DoctorRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DoctorRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DoctorRegistry__factory {
    return super.connect(runner) as DoctorRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DoctorRegistryInterface {
    return new Interface(_abi) as DoctorRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DoctorRegistry {
    return new Contract(address, _abi, runner) as unknown as DoctorRegistry;
  }
}
