/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  DoctorRegistry,
  DoctorRegistryInterface,
} from "../DoctorRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "doctor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "specialization",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "profileCID",
        type: "string",
      },
    ],
    name: "DoctorRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "doctor",
        type: "address",
      },
    ],
    name: "DoctorRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "doctorAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "doctors",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "specialization",
        type: "string",
      },
      {
        internalType: "string",
        name: "profileCID",
        type: "string",
      },
      {
        internalType: "bool",
        name: "verified",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllVerifiedDoctors",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "doctorAddr",
        type: "address",
      },
    ],
    name: "getDoctorDetails",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "specialization",
        type: "string",
      },
      {
        internalType: "string",
        name: "profileCID",
        type: "string",
      },
      {
        internalType: "bool",
        name: "verified",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "doctorAddr",
        type: "address",
      },
    ],
    name: "isVerified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "doctorAddr",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "specialization",
        type: "string",
      },
      {
        internalType: "string",
        name: "profileCID",
        type: "string",
      },
    ],
    name: "registerDoctor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "doctorAddr",
        type: "address",
      },
    ],
    name: "revokeDoctor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "transferAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50600080546001600160a01b03191633179055610f70806100316000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063a9583c2211610066578063a9583c2214610103578063b9209e3314610126578063bab90dbd14610165578063c1c69a1c14610178578063f851a4401461018d57600080fd5b80630416af27146100985780633ba51e7c146100ad57806375829def146100dd57806393c095ff146100f0575b600080fd5b6100ab6100a6366004610aef565b6101a0565b005b6100c06100bb366004610b11565b61029b565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ab6100eb366004610aef565b6102c5565b6100ab6100fe366004610b73565b610311565b610116610111366004610aef565b61056c565b6040516100d49493929190610c70565b610155610134366004610aef565b6001600160a01b031660009081526001602052604090206003015460ff1690565b60405190151581526020016100d4565b610116610173366004610aef565b61072f565b61018061094f565b6040516100d49190610cbd565b6000546100c0906001600160a01b031681565b6000546001600160a01b031633146101d35760405162461bcd60e51b81526004016101ca90610d09565b60405180910390fd5b6001600160a01b03811660009081526001602052604090206003015460ff1661024f5760405162461bcd60e51b815260206004820152602860248201527f446f63746f72206e6f742072656769737465726564206f7220616c7265616479604482015267081c995d9bdad95960c21b60648201526084016101ca565b6001600160a01b038116600081815260016020526040808220600301805460ff19169055517fc7053e532de062d754b8ed96090affe0c4ba36dde0a699de7dd5185a9a9e7d0f9190a250565b600281815481106102ab57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146102ef5760405162461bcd60e51b81526004016101ca90610d09565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461033b5760405162461bcd60e51b81526004016101ca90610d09565b6001600160a01b03871660009081526001602052604090206003015460ff16156103a75760405162461bcd60e51b815260206004820152601960248201527f446f63746f7220616c726561647920726567697374657265640000000000000060448201526064016101ca565b604051806080016040528087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f880181900481028201810190925286815291810191908790879081908401838280828437600092019190915250505090825250604080516020601f86018190048102820181019092528481529181019190859085908190840183828082843760009201829052509385525050600160209384018190526001600160a01b038c168352909252604090208251909150819061048d9082610dcc565b50602082015160018201906104a29082610dcc565b50604082015160028201906104b79082610dcc565b50606091909101516003909101805460ff1916911515919091179055600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0389169081179091556040517f6ec2d4f29ace1bfeec4e3323ae5cd8987538be3c8fec51a7752861585ff64e039061055b90899089908990899089908990610eb4565b60405180910390a250505050505050565b60016020526000908152604090208054819061058790610d43565b80601f01602080910402602001604051908101604052809291908181526020018280546105b390610d43565b80156106005780601f106105d557610100808354040283529160200191610600565b820191906000526020600020905b8154815290600101906020018083116105e357829003601f168201915b50505050509080600101805461061590610d43565b80601f016020809104026020016040519081016040528092919081815260200182805461064190610d43565b801561068e5780601f106106635761010080835404028352916020019161068e565b820191906000526020600020905b81548152906001019060200180831161067157829003601f168201915b5050505050908060020180546106a390610d43565b80601f01602080910402602001604051908101604052809291908181526020018280546106cf90610d43565b801561071c5780601f106106f15761010080835404028352916020019161071c565b820191906000526020600020905b8154815290600101906020018083116106ff57829003601f168201915b5050506003909301549192505060ff1684565b606080606060008060016000876001600160a01b03166001600160a01b0316815260200190815260200160002060405180608001604052908160008201805461077790610d43565b80601f01602080910402602001604051908101604052809291908181526020018280546107a390610d43565b80156107f05780601f106107c5576101008083540402835291602001916107f0565b820191906000526020600020905b8154815290600101906020018083116107d357829003601f168201915b5050505050815260200160018201805461080990610d43565b80601f016020809104026020016040519081016040528092919081815260200182805461083590610d43565b80156108825780601f1061085757610100808354040283529160200191610882565b820191906000526020600020905b81548152906001019060200180831161086557829003601f168201915b5050505050815260200160028201805461089b90610d43565b80601f01602080910402602001604051908101604052809291908181526020018280546108c790610d43565b80156109145780601f106108e957610100808354040283529160200191610914565b820191906000526020600020905b8154815290600101906020018083116108f757829003601f168201915b50505091835250506003919091015460ff16151560209182015281519082015160408301516060909301519199909850919650945092505050565b60606000805b6002548110156109bc57600160006002838154811061097657610976610efd565b60009182526020808320909101546001600160a01b0316835282019290925260400190206003015460ff16156109b457816109b081610f13565b9250505b600101610955565b5060008167ffffffffffffffff8111156109d8576109d8610d2d565b604051908082528060200260200182016040528015610a01578160200160208202803683370190505b5090506000805b600254811015610aca576001600060028381548110610a2957610a29610efd565b60009182526020808320909101546001600160a01b0316835282019290925260400190206003015460ff1615610ac25760028181548110610a6c57610a6c610efd565b9060005260206000200160009054906101000a90046001600160a01b0316838381518110610a9c57610a9c610efd565b6001600160a01b039092166020928302919091019091015281610abe81610f13565b9250505b600101610a08565b50909392505050565b80356001600160a01b0381168114610aea57600080fd5b919050565b600060208284031215610b0157600080fd5b610b0a82610ad3565b9392505050565b600060208284031215610b2357600080fd5b5035919050565b60008083601f840112610b3c57600080fd5b50813567ffffffffffffffff811115610b5457600080fd5b602083019150836020828501011115610b6c57600080fd5b9250929050565b60008060008060008060006080888a031215610b8e57600080fd5b610b9788610ad3565b9650602088013567ffffffffffffffff811115610bb357600080fd5b610bbf8a828b01610b2a565b909750955050604088013567ffffffffffffffff811115610bdf57600080fd5b610beb8a828b01610b2a565b909550935050606088013567ffffffffffffffff811115610c0b57600080fd5b610c178a828b01610b2a565b989b979a50959850939692959293505050565b6000815180845260005b81811015610c5057602081850181015186830182015201610c34565b506000602082860101526020601f19601f83011685010191505092915050565b608081526000610c836080830187610c2a565b8281036020840152610c958187610c2a565b90508281036040840152610ca98186610c2a565b915050821515606083015295945050505050565b602080825282518282018190526000918401906040840190835b81811015610cfe5783516001600160a01b0316835260209384019390920191600101610cd7565b509095945050505050565b6020808252600a908201526927b7363c9020b236b4b760b11b604082015260600190565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680610d5757607f821691505b602082108103610d7757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610dc757806000526020600020601f840160051c81016020851015610da45750805b601f840160051c820191505b81811015610dc45760008155600101610db0565b50505b505050565b815167ffffffffffffffff811115610de657610de6610d2d565b610dfa81610df48454610d43565b84610d7d565b6020601f821160018114610e2e5760008315610e165750848201515b600019600385901b1c1916600184901b178455610dc4565b600084815260208120601f198516915b82811015610e5e5787850151825560209485019460019092019101610e3e565b5084821015610e7c5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b606081526000610ec860608301888a610e8b565b8281036020840152610edb818789610e8b565b90508281036040840152610ef0818587610e8b565b9998505050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201610f3357634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220bae5f45d2365b3ae8fdaff0249366a460cd89b75a4cc087bbd32ef4972edbf7864736f6c634300081c0033";

type DoctorRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DoctorRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DoctorRegistry__factory extends ContractFactory {
  constructor(...args: DoctorRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DoctorRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DoctorRegistry__factory {
    return super.connect(runner) as DoctorRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DoctorRegistryInterface {
    return new Interface(_abi) as DoctorRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DoctorRegistry {
    return new Contract(address, _abi, runner) as unknown as DoctorRegistry;
  }
}
